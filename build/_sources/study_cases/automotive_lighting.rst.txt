.. _study_cases/automotive_lighting

===========================
Automotive lighting system
===========================

Introduction
############

The aim of this study case is to provide the basic knowledge tu create a 
continuous current circuit following `IEC 61082`_ norms.

The lighting system of a tractor from the 90th has been taken as reference 
to create the study case.

Project creation and configuration
##################################

To start working with QElectrotech:

1. `Launch QElectroTech`_.
2. `Create a new project`_.

Before the creation of the diagrams, project properties which can automate 
actions and reduce the creation time have to be defined. Following this steps, 
the working efficiency is optimizated.

General project properties
~~~~~~~~~~~~~~~~~~~~~~~~~~

The general project properties allows defining general variables to be used in the whole project.

In the case of a ligtening system of a tractor, the global variables from the project could be:

:``machine``:
   Variable which value is ``Tractor``
:``brand``:
   Variable which value is the tractor brand.
:``model``:
   Variable which value is the tractor model
:``system``:
   Variable which value is the tractor system which is represented, ``Electric system``.

To define general project variables:

1. `Display project properties`_ and go to **General** section.
2. Define variable names at **Name** column from table: ``machine``, ``brand``, ``model`` and ``system``.
3. Define variable value at **Value** colum from table: ``Tractor``, tractor brand, tractor model, and ``Electric system``.

.. note::

   Once the project is saved for first time, some default variables are automatically created and set (Ex.: ``saveddate``, ``savedfilename``, ``savedfilepath``, etc.)

.. figure:: ../images/qet_automotive_lighting_project_prop_general.png
   :align: center

   Figure: Project properties after project saving 

.. warning::

   Variable names may only contain lowercase letters, digits and dashes.

Auto Numbering configuration
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The **Auto Numbering** section from `project properties`_ allows defining the identification code 
which will be used in the project.

Defining the numbering patterns before starting to create the schema increases the working 
efficency because of the automatic posibility to number each wire, element and folio during 
its creation. Otherwise, the numbering has to be defined manually object by object.

In this study case, the coding according `IEC 81346`_ is used. From the begining, the following 
numbering patterns are defined:

:Conductors:

   +---+----+
   | W | YY |
   +---+----+

   * **W** is the `IEC 81346`_ code for guiding or transporting means.
   * ``YY`` is an alphanumeric code which identifies the wire.

:Elements:

   +---+----+
   | C | YY |
   +---+----+

   * **C** is the `IEC 81346`_ code for providing radiant or thermal energy, used to identify lamps.
   * ``YY`` is an alphanumeric code which identifies the lamp.

   +---+----+
   | E | YY |
   +---+----+

   * **E** is the `IEC 81346`_ code for storing of energy, used to identify batteries.
   * ``YY`` is an alphanumeric code which identifies the battery.

   +---+----+
   | F | YY |
   +---+----+

   * **F** is the `IEC 81346`_ code for direct protection from dangerous or unwanted conditions, used to identify fuses.
   * ``YY`` is an alphanumeric code which identifies the fuse.

   +---+----+
   | Q | YY |
   +---+----+

   * **Q** is the `IEC 81346`_ code for controlled switching.
   * ``YY`` is an alphanumeric code which identifies the switch.

   +---+----+
   | X | YY |
   +---+----+

   * **X** is the `IEC 81346`_ code connecting objects, used to identify terminals.
   * ``YY`` is an alphanumeric code which identifies the terminal.

To define general project variables:

1. `Display project properties`_ and go to **Auto Numberting** section.
2. Selects the tab from the object from which a numbering pattern should be defined: **conductor**, **element**, **folio**.
3. Define numbering pattern name overwriting the **Availables numbering** drop down text box (Ex.: ``Wire``, ``Battery``, ``Lamp``, ``Switch``, ``Fuse`` and ``Terminal``).
4. Change type of default variable to **Text**.
5. Set variable value according `IEC 81346`_ code: ``C``, ``E``, ``F``, ``Q``, ``X`` or ``W``.
6. Add new variable to pattern by pressing |list-add| button.
7. Change type of variable to **number format 01**.
8. Set variable vlue to **1** and keep the incrementing value on **1**.
9. Press **Apply** button to create the pattern. 
 

.. figure:: ../images/qet_automotive_lighting_project_prop_numbering.png
   :align: center

   Figure: Element patterns defined in project

New folio properties
~~~~~~~~~~~~~~~~~~~~

The **New folio** section from project properties allows pre-defining properties which will be automatically defined when a folio is added to the project.
The folio size, folio title block and the folio variables can be pre-defined.

To define new folio properties:

1. `Display project properties`_ and go to **New Folio** section.
2. Selects the tab **Folio**.
3. Change the default values from folio size, title block template and default and/or custom folio variables.

In reference to the folio size, the default values will be kept.

   * 17 columns with a width of 60 pixels.
   * 8 rows with a height of 80 pixels.

In reference to the folio title block, the A4 tenmplat from ISO 7200 is choosen.

In reference to the folio variables, only default variables are set.

   * Author: ``QElectroTech Team``
   * Plant: The system variable from the project, ``%system``, to prepare the project for potential future extrensions as the hydraulic system is used.
   * Location: Set as ``Lighting``, in the future other systems as ``Start system``, ``Engine status system``, ``Speed control system``, etc. could be added.

.. figure:: ../images/qet_automotive_lighting_project_prop_new_folio.png
   :align: center

   Figure: New folio properties defined in project

Conductor properties
~~~~~~~~~~~~~~~~~~~~

The **New folio** section from project properties allows pre-defining conductor properties which will be automatically defined when a conductor is added to the project.

To define new conductor properties for multiline conductor:

   1. `Display project properties`_ and go to **New Folio** section.
   2. Selects the tab **Conductor**.
   3. Selects the tab **Type**.
   4. Selects the tab **Multiline**.
   5. Change the default properties from conductor.

In this study case, the wires have to be identified on the schema, the displayed text should be 
generated by the autonumbering pattern. 

   * **Text Formula** set to ``%autonum``.

The function of the wires which will be drawn are for the ligting system, 12 V DC and with a section of 1 mm. 
For this reason, the following conductor variables are set:

   * **Function** set to ``Lighting``
   * **Voltage/Protocol** set to ``12 V DC``
   * **Conductor section** set to ``1 mm``



.. figure:: ../images/qet_automotive_lighting_project_prop_conductor.png
   :align: center

   Figure: Conductor properties defined in project

.. _IEC 61082: https://webstore.iec.ch/publication/4469
.. _IEC 81346: https://www.iso.org/standard/50858.html

.. |list-add| image:: ../images/ico/22x22/list-add.png

.. _Launch QElectroTech: ../basics/launch_linux.html
.. _Create a new project: ../project/new_project.html
.. _Save the empty project: ../project/save_project.html
.. _Display project properties: ../project/properties/display.html
.. _project properties: ../project/properties/index.html
